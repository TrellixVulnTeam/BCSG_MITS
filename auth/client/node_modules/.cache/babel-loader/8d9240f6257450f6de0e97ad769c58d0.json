{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tato\\\\Desktop\\\\Capstone\\\\BCSG\\\\auth\\\\client\\\\src\\\\requireAuth.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // Higher order component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default (ChildComponent => {\n  class ComposedComponent extends Component {\n    constructor(...args) {\n      super(...args);\n\n      this.isAuthenticated = () => {\n        if (!this.props.auth) {\n          // redirect our user back to home page\n          this.props.history.push('/'); //redirecting via react-router\n        }\n      };\n    }\n\n    componentDidMount() {\n      this.isAuthenticated();\n    }\n\n    componentDidUpdate() {\n      this.isAuthenticated();\n    } // is our user authenticated?\n\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(ChildComponent, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }, this); //returns original comp  with additioanal logic attached\n    }\n\n  } //class component \n\n\n  const mapStateToProps = state => {\n    return {\n      auth: state.auth.authenticated\n    };\n  };\n\n  return connect(mapStateToProps, null)(ComposedComponent);\n}); //inside HOC\n// composed component is the child comp passed in with all the additional logic passed with it","map":{"version":3,"sources":["C:/Users/Tato/Desktop/Capstone/BCSG/auth/client/src/requireAuth.js"],"names":["React","Component","connect","ChildComponent","ComposedComponent","isAuthenticated","props","auth","history","push","componentDidMount","componentDidUpdate","render","mapStateToProps","state","authenticated"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CAEA;;;AAEA,gBAAgBC,cAAD,IAAoB;AAE/B,QAAMC,iBAAN,SAAgCH,SAAhC,CAA0C;AAAA;AAAA;;AAAA,WAWtCI,eAXsC,GAWpB,MAAK;AACnB,YAAG,CAAC,KAAKC,KAAL,CAAWC,IAAf,EAAoB;AAChB;AACA,eAAKD,KAAL,CAAWE,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB,EAFgB,CAEc;AACjC;AACJ,OAhBqC;AAAA;;AAEtCC,IAAAA,iBAAiB,GAAE;AACf,WAAKL,eAAL;AACH;;AAEDM,IAAAA,kBAAkB,GAAE;AAChB,WAAKN,eAAL;AACH,KARqC,CAUtC;;;AAQAO,IAAAA,MAAM,GAAE;AAEL,0BAAQ,QAAC,cAAD,OAAoB,KAAKN;AAAzB;AAAA;AAAA;AAAA;AAAA,cAAR,CAFK,CAEqC;AACxC;;AArBiC,GAFX,CAyB7B;;;AAGN,QAAMO,eAAe,GAAIC,KAAD,IAAW;AAC/B,WAAO;AACHP,MAAAA,IAAI,EAAEO,KAAK,CAACP,IAAN,CAAWQ;AADd,KAAP;AAGH,GAJD;;AAMA,SAAOb,OAAO,CAAEW,eAAF,EAAmB,IAAnB,CAAP,CAAgCT,iBAAhC,CAAP;AAEC,CApCD,E,CAoCC;AAED","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\n\r\n// Higher order component\r\n\r\nexport default (ChildComponent) => {\r\n\r\n    class ComposedComponent extends Component {\r\n\r\n        componentDidMount(){\r\n            this.isAuthenticated();\r\n        }\r\n\r\n        componentDidUpdate(){\r\n            this.isAuthenticated();\r\n        }\r\n\r\n        // is our user authenticated?\r\n        isAuthenticated = ()=> {\r\n            if(!this.props.auth){\r\n                // redirect our user back to home page\r\n                this.props.history.push('/'); //redirecting via react-router\r\n            }\r\n        }\r\n\r\n        render(){\r\n\r\n           return  <ChildComponent {...this.props}/> //returns original comp  with additioanal logic attached\r\n            }\r\n        \r\n    } //class component \r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth.authenticated\r\n    }\r\n}\r\n\r\nreturn connect (mapStateToProps, null)(ComposedComponent)\r\n\r\n}//inside HOC\r\n\r\n// composed component is the child comp passed in with all the additional logic passed with it "]},"metadata":{},"sourceType":"module"}